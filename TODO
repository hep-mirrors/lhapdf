LHAPDF6 TODO list
-----------------

NOW

* Use auto_ptr in LHAGlue

* Fix multi_array reshaping in PDFGrid loading

* Forbid PDF construction from a direct path to the data file?
   Rely on dir structure instead? Do PDFs _need_ to have a dir? (Maybe yes)

* Add Boost and yaml-cpp detection and path-passing to build system
   Can yaml-cpp be kept completely internal and bundled?

* Enable Doxygen building
   And put the DESIGN document into the Doxy output


NEXT

* Add more metadata methods to PDF and PDFGrid

* Adapt interpolators and extrapolators to use new grid format.
   Slight rename to e.g. GridInterpolator to make the grid part specific?

* Interpolation attachment to PDFGrid in both directions
   Means that e.g. Extrapolator can make use of the current interpolator

* Caching of grid indices in Interpolator and Extrapolator interfaces

* Refactor and test alpha_s running
   Break into several polymorphic implementers of AlphaS for analystic
   approximations, numerical RGE solving, and interpolation. Set params on
   AlphaS (and subclasses) directly, with sensible defaults for many, to be set
   by PDFs based on their Info/metadata values. That way the AlphaS part will be
   only minimally coupled to the PDF system.


FOR BETA 1

* Throw/assert if dir name and file name are inconsistent

* Include installation dir in search list

* lhapdf-config build assistant script

* Only expose headers with the public interface
   Internalise headers used for implementation components only.

* Validation system and plotting
   Don't try to link both LHAPDFs simultaneously. Generate a big x,Q sample
   point list, then separately dump out xf(x) values into separate files with
   old and new LHAPDF, and finally compare the files line-by-line, with
   pulls/ratios to the "old" LHAPDF as the reference.

* Deal specially with CTEQ6L1 in LHAGLUE
   The old LHAPDF set was misnamed as CTEQ6ll (two L's). Need some backward
   compatibility at the same time as sorting out the misnaming. Only in the
   Fortran interface?

* Treating missing flavours with error vs. return 0
   Provide a switch to distinguish the two responses. Put ID check into
   PDF::xfxQ2 function?

* Printing out banner info... needed by code that greps for it :-/
   e.g. ATLAS' Generate_trf.py ...

* Really old PDFLIB-style xfx etc. functions, and the non-*m LHAPDF5 Fortran subroutines.
   Both should just use nset = 0 all the time.


FOR BETA 2

* Interpolation in (log(x), log(Q2)) as well as (x, Q)

* More Fortran API elements
   On demand after first beta release.

* Updated lhapdf-getdata, downloading PDFs as tarballs


FOR STABLE 6.0.0 RELEASE

* Versioning scheme for PDF data
   In metadata and tarball filenames.

* Python interface
   For access to standard functionality but not pluggable in the sense that a
   Python interpolator class cannot be passed to a wrapped PDF object: so hide
   the non-factory-based functions.


AS AND WHEN

* Read zipped/tarred PDFs
   With standard directory structure internally.

* Updated Octave wrapper
