LHAPDF6 TODO list
-----------------

NOW

* Fix and test numerical and analytic alpha_s running
   The ODE solver needs serious optimisation, and numerically the results look
   dubious for both the analytic and ODE versions

* Caching of subgrid indices in Interpolator and Extrapolator interfaces

* Migrate CTEQ6L1 and CT10 PDFs to new format and validate

* Validation system and plotting
   Don't try to link both LHAPDFs simultaneously. Generate a big x,Q sample
   point list, then separately dump out xf(x) values into separate files with
   old and new LHAPDF, and finally compare the files line-by-line, with
   pulls/ratios to the "old" LHAPDF as the reference.


NEXT

* Remove or fix Doxy param lists
   Make sure that Doxygen isn't producing error messages

* Add Boost and yaml-cpp detection and path-passing to build system
   Can yaml-cpp be kept completely internal and bundled?

* Strip file extensions and deal specially with CTEQ6L1 in LHAGLUE
   The old LHAPDF set was misnamed as CTEQ6ll (two L's). Need some backward
   compatibility at the same time as sorting out the misnaming. Only in the
   Fortran interface?

* Treating missing flavours with error vs. return 0
   Provide a switch to distinguish the two responses. Put ID check into
   PDF::xfxQ2 function?

* Really old PDFLIB-style xfx etc. functions, and the non-*m LHAPDF5 Fortran subroutines.
   Both should just use nset = 0 all the time.



FOR BETA 1

* lhapdf-config build assistant script

* Printing out banner info... needed by code that greps for it :-/
   e.g. ATLAS' Generate_trf.py ...

* Change "config" -> "settings"?
   And add a Settings.h or Config.h to access it, rather than the static fn on Info

* Move the test programs into "tests" and clean up the root dir

* Implement PDF::pdfsetname and memberID

* Forbid PDF construction from a direct path to the data file?
   Rely on dir structure instead? Do PDFs _need_ to have a dir? (Maybe yes)
   Same set of constructors for PDF (and derivatives) and Info?
   Throw/assert if dir name and file name are inconsistent


FOR BETA 2

* Profile GridPDF and AlphaS_ODE

* Include the TODO, DESIGN, CONFIGFLAGS and CODINGSTYLE files in the Doxygen
   How does H++ doc the config interfaces? Doxygen now supports Markdown syntax
   so the plain text files should be able to remain painlessly readable.

* Find a way to specify whether PWD is to be searched, if possible
   The Config mechanism can't be used as it uses the path searching in its
   initialisation: an infinite loop results.

* Add interpolation-from-metadata implementation of AlphaS

* Updated lhapdf-getdata, downloading PDFs as tarballs

* Re-introduce set-level Info singletons
   Will allow set-level configs to propagate to all members.
   Define the "lock time", for things like ipol/xpol/alphaS.


FOR STABLE 6.0.0 RELEASE

* Write-up
   Target at EPJC Tools, cf. Rivet?

* Interpolation in (log(x), log(Q2)) as well as (x, Q)

* Versioning scheme for PDF data
   In metadata and tarball filenames.

* Python interface
   For access to standard functionality but not pluggable in the sense that a
   Python interpolator class cannot be passed to a wrapped PDF object: so hide
   the non-factory-based functions.


AS AND WHEN

* Add more metadata methods to PDF and PDFGrid as needed

* Read zipped/tarred PDFs
   With standard directory structure internally.

* Separate x and Q2 extrapolators?

* Updated Octave wrapper

* Use Autoconf's more robust FC_* Fortran function name macros
