LHAPDF6 TODO list
-----------------

NOW

* Fix multi_array reshaping in PDFGrid loading

* Use auto_ptr in LHAGlue

* Adapt interpolators and extrapolators to use new grid format.
   Slight rename to e.g. GridInterpolator to make the grid part specific?

* Interpolation attachment to PDFGrid in both directions
   Means that e.g. Extrapolator can make use of the current interpolator

* Caching of grid indices in Interpolator and Extrapolator interfaces

* Implement numerical alpha_s running with several options, and also support
   interpolation of tablulated alpha_s values (with 1D subgrids).


FOR BETA 1

* Only expose headers with the public interface
   Internalise headers used for implementation components only.

* Validation system and plotting
   Don't try to link both LHAPDFs simultaneously. Generate a big x,Q sample
   point list, then separately dump out xf(x) values into separate files with
   old and new LHAPDF, and finally compare the files line-by-line, with
   pulls/ratios to the "old" LHAPDF as the reference.

* Deal specially with CTEQ6L1 in LHAGLUE
   The old LHAPDF set was misnamed as CTEQ6ll (two L's). Need some backward
   compatibility at the same time as sorting out the misnaming. Only in the
   Fortran interface?

* Treating missing flavours with error vs. return 0
   Provide a switch to distinguish the two responses. Put ID check into
   PDF::xfxQ2 function?

* Printing out banner info... needed by code that greps for it :-/
   e.g. ATLAS' Generate_trf.py ...

* Really old PDFLIB-style xfx etc. functions, and the non-*m LHAPDF5 Fortran subroutines.
   Both should just use nset = 0 all the time.


FOR BETA 2

* Interpolation in (log(x), log(Q2)) as well as (x, Q)

* More Fortran API elements? On demand after first beta release
